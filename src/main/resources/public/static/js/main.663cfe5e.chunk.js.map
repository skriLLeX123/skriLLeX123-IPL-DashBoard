{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRouter","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","console","log","fetchMatches","TeamTile","url","src","alt","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.663cfe5e.chunk.js","sourcesContent":["import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./MatchDetailCard.scss\";\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n    if(!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRouter = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n      \r\n    <div className=\"MatchDetailCard\">\r\n    <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRouter}> {otherTeam}</Link></h1>\r\n        <h2 className=\"match-date\">{match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h3 className={isMatchWon ? 'match-result won-card' : 'match-result lost-card'}>{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n     </div>\r\n     <div className=\"additonal-detail\">\r\n        <h3>First Innings</h3><p>{match.team1}</p>\r\n        <h3>Second Innings</h3><p>{match.team2}</p>\r\n        <h3>Man of the Match</h3><p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3><p>{match.umpire1},{match.umpire2}</p>\r\n     </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './MatchSmallCard.scss';\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n    if(!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRouter = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n  return (\r\n    <div className=\"MatchSmallCard\">\r\n     <span className=\"vs\">vs</span>\r\n     <p className=\"small-team-name\"> <Link to={otherTeamRouter}>   {otherTeam}</Link></p>\r\n     <p className={isMatchWon? 'won-card match-result':'lost-card match-result'}>{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import {React, useEffect, useState} from 'react';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport {useParams} from 'react-router-dom';\r\nimport './TeamPage.scss';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport {Link} from 'react-router-dom';\r\nexport const TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({matches:[]});\r\n\r\n    const {teamName} = useParams();\r\n\r\n    useEffect(\r\n        ()=>{\r\n            const fetchTeam = async()=>{\r\n                const response = await fetch(`/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n            };\r\n            fetchTeam();\r\n        }, [teamName]\r\n    );\r\n\r\n    if(!team || !team.teamName){\r\n        return <h1>Team Not Found</h1>\r\n    }\r\n    return (\r\n     <div className=\"TeamPage\">\r\n        <div className=\"team-name-section\"> <h3 className=\"team-name\">{team.teamName}</h3></div>\r\n        <div className = \"win-loss-section\"> Wins / Losses\r\n            <PieChart data={[\r\n                    { title: 'Losses', value: team.totalMatches-team.totalWins, color: '#C13C37' },\r\n                    { title: 'Wins', value: team.totalWins, color: '#27AE60' },\r\n                    \r\n                ]} />\r\n        </div>\r\n        <div className=\"match-detail-section\">\r\n            <h3>Latest Matches</h3>\r\n            <MatchDetailCard teamName = {team.teamName} match={team.matches[0]}/></div>\r\n        {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName = {team.teamName} match ={match}/>)}\r\n        <div className=\"more-link\">\r\n            <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './YearSelector.scss'\r\nexport const YearSelector = ({teamName})=>{\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for(let i = startYear; i<=endYear; i++){\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className='yearSelector'>\r\n            { years.map(year => (\r\n                 <li key={year}> \r\n                     <Link  to={`/teams/${teamName}/matches/${year}`}>{year} </Link> \r\n                </li> \r\n            ))}\r\n        </ol>\r\n        \r\n    )\r\n    \r\n            }","import {React, useEffect, useState} from 'react';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\nimport {useParams} from 'react-router-dom';\r\nimport './MatchPage.scss';\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const {teamName, year} = useParams();\r\n    useEffect(\r\n      ()=>{\r\n          const fetchMatches = async()=>{\r\n              const response = await fetch(`/team/${teamName}/matches?year=${year}`);\r\n              const data = await response.json();\r\n              setMatches(data);\r\n              console.log(\"Data recievved\");\r\n          };\r\n          fetchMatches();\r\n      }, [teamName,year]\r\n  );\r\n\r\n    return (\r\n     <div className=\"MatchPage\">\r\n        <div className = \"year-selector\">\r\n          <h3> Select Year: </h3>\r\n          <YearSelector teamName ={teamName}/>\r\n        </div>\r\n        <div>\r\n          <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n        {\r\n        matches.map(match => <MatchDetailCard key={match.id} teamName = {teamName} match ={match}/>)\r\n      }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import {React} from 'react';\r\nimport './TeamTile.scss';\r\nimport {Link} from 'react-router-dom';\r\nexport const TeamTile = ({teamName}) => {\r\n    const url = '/resources/'+teamName+'.jpg';\r\n  return (\r\n      <div className=\"TeamTile\">\r\n          <img className=\"logo\" src={url} alt=''></img>\r\n          <h1 className=\"team-title\"><Link to={`/teams/${teamName}`}>{teamName}</Link></h1>\r\n      </div>\r\n   \r\n  );\r\n}\r\n\r\n\r\n","import {React, useEffect, useState} from 'react';\r\nimport './HomePage.scss';\r\nimport { TeamTile } from '../components/TeamTile';\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n\r\n\r\n    useEffect(\r\n        ()=>{\r\n            const fetchAllTeams = async()=>{\r\n                const response = await fetch(`/team/`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n            };\r\n            fetchAllTeams();\r\n        }, []\r\n    );\r\n\r\n   \r\n    return (\r\n     <div className=\"HomePage\">\r\n        <div className=\"header-section\"> <h3 className=\"app-name\">IPL DashBoard</h3></div>\r\n    <div className=\"team-grid\">{teams.map(team=> <TeamTile key={team.id} teamName={team.teamName}/>)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import './App.scss';\nimport {TeamPage} from './pages/TeamPage.js';\nimport {MatchPage} from './pages/MatchPage.js';\nimport { HomePage } from './pages/HomePage';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage/>\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage/>\n          </Route>\n          <Route path=\"/\">\n            <HomePage/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}